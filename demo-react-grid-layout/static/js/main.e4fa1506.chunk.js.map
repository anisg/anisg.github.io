{"version":3,"sources":["generated/util.ts","generated/op/getBlocks.ts","generated/op/addBlock.ts","generated/op/removeBlock.ts","generated/op/addTodoItem.ts","generated/op/updateTodoItem.ts","generated/op/removeTodoItem.ts","generated/ql.ts","resolvers.ts","components/util.tsx","components/InputAddItem.tsx","components/TodoItem.tsx","components/TodoList.tsx","pages/Root.tsx","index.tsx"],"names":["TodoItemStatus","block","getBlocks","graphql","addBlock","removeBlock","addTodoItem","updateTodoItem","removeTodoItem","useMutation","x","opt","useMutationOrig","op","todoFragment","gql","blockFragment","idx","resolvers","Mutation","_","blockId","content","cache","getCacheKey","readFragment","fragment","id","console","log","item","__typename","status","active","isLoading","nextBlock","produce","todos","writeData","data","todo","nextTodo","filter","e","prev","readQuery","query","ql","removedItem","blocks","newItem","TodoItem","Block","FlexR","styled","div","FlexC","InputBar","input","Form","form","IconSend","FontAwesomeIcon","attrs","icon","faPaperPlane","disabled","InputAddItem","onSubmit","placeholder","defaultValue","props","inputRef","useRef","useState","value","setValue","preventDefault","length","ref","onChange","target","onClick","completed","Icon","color","primary","hover","_Cont","Check","checked","onToggle","type","IconSync","faSpinner","IconRemove","faTimes","isSync","onChangeText","onRemove","v","onBlur","onKeyDown","key","blur","TodoListLoading","TodoListEmpty","TodoList","onChangeItemContent","onChangeItemStatus","onRemoveItem","map","Wrap","Header","Card","Cont","BlockContent","style","flex","variables","WrapGridLayout","onCreateBlock","layout","className","minHeight","isDroppable","width","draggableCancel","data-grid","_id","useQueryOrig","_addBlock","setLayout","useCallback","a","async","l","i","y","w","h","minW","static","InMemoryCache","client","ApolloClient","ReactDOM","render","ApolloProvider","Root","document","getElementById"],"mappings":"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","file":"static/js/main.e4fa1506.chunk.js","sourcesContent":["\n// ~ auto generated\nimport { DocumentNode } from \"graphql\";\n\n/* tslint:disable */\n/* eslint-disable */\n// This file was automatically generated and should not be edited.\n\n//==============================================================\n// START Enums and Input Objects\n//==============================================================\n\nexport enum TodoItemStatus {\n  active = \"active\",\n  completed = \"completed\",\n}\n\n//==============================================================\n// END Enums and Input Objects\n//==============================================================\n\n\nexport const todo = `fragment todo on TodoItem {\n  id\n  content\n  status\n  isLoading\n}`\n\n\nexport const block = `fragment block on Block {\n  id\n  todos {\n    id\n    content\n    status\n    isLoading\n  }\n}`\n\n\nexport {gql as graphql} from '@apollo/client'\n\n\nexport interface ExtQuery<T,T2> extends DocumentNode {\n}\n\nexport interface ExtSubscription<T,T2> extends DocumentNode {\n}\n\nexport interface ExtMutation<T,T2> extends DocumentNode {\n  \n}\n\n","import {graphql,ExtQuery,TodoItemStatus,todo,block} from '../util'\n    /* tslint:disable */\n/* eslint-disable */\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL query operation: getBlocks\n// ====================================================\n\nexport interface getBlocks_blocks_todos {\n  id: string;\n  status: TodoItemStatus;\n  content: string;\n  isLoading: boolean;\n}\n\nexport interface getBlocks_blocks {\n  id: string;\n  todos: getBlocks_blocks_todos[];\n}\n\nexport interface getBlocks {\n  blocks: getBlocks_blocks[];\n}\n\nexport interface getBlocksVariables {};\n\nexport const getBlocks:ExtQuery<getBlocks,getBlocksVariables> = graphql`\n    query getBlocks {\n  blocks @client {\n    id\n    todos {\n      id\n      status\n      content\n      isLoading\n    }\n  }\n}\n    ${todo}\n${block}\n`","import {graphql,ExtMutation,} from '../util'\n    /* tslint:disable */\n/* eslint-disable */\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: addBlock\n// ====================================================\n\nexport interface addBlock_addBlock {\n  id: string;\n}\n\nexport interface addBlock {\n  addBlock: addBlock_addBlock | null;\n}\n\nexport interface addBlockVariables {\n  id: string;\n}\n\nexport const addBlock:ExtMutation<addBlock,addBlockVariables> = graphql`\n    mutation addBlock($id: ID!) {\n  addBlock(id: $id) @client {\n    id\n  }\n}\n    \n`","import {graphql,ExtMutation,} from '../util'\n    /* tslint:disable */\n/* eslint-disable */\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: removeBlock\n// ====================================================\n\nexport interface removeBlock_removeBlock {\n  id: string;\n}\n\nexport interface removeBlock {\n  removeBlock: removeBlock_removeBlock | null;\n}\n\nexport interface removeBlockVariables {\n  id: string;\n}\n\nexport const removeBlock:ExtMutation<removeBlock,removeBlockVariables> = graphql`\n    mutation removeBlock($id: ID!) {\n  removeBlock(id: $id) @client {\n    id\n  }\n}\n    \n`","import {graphql,ExtMutation,block} from '../util'\n    /* tslint:disable */\n/* eslint-disable */\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: addTodoItem\n// ====================================================\n\nexport interface addTodoItem_addTodoItem {\n  id: string;\n}\n\nexport interface addTodoItem {\n  addTodoItem: addTodoItem_addTodoItem;\n}\n\nexport interface addTodoItemVariables {\n  blockId: string;\n  content: string;\n}\n\nexport const addTodoItem:ExtMutation<addTodoItem,addTodoItemVariables> = graphql`\n    mutation addTodoItem($blockId: ID!, $content: String!) {\n  addTodoItem(blockId: $blockId, content: $content) @client {\n    id\n  }\n}\n    ${block}\n`","import {graphql,ExtMutation,TodoItemStatus} from '../util'\n    /* tslint:disable */\n/* eslint-disable */\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: updateTodoItem\n// ====================================================\n\nexport interface updateTodoItem {\n  updateTodoItem: boolean;\n}\n\nexport interface updateTodoItemVariables {\n  id: string;\n  content?: string | null;\n  status?: TodoItemStatus | null;\n}\n\nexport const updateTodoItem:ExtMutation<updateTodoItem,updateTodoItemVariables> = graphql`\n    mutation updateTodoItem($id: ID!, $content: String, $status: TodoItemStatus) {\n  updateTodoItem(id: $id, content: $content, status: $status) @client\n}\n    \n`","import {graphql,ExtMutation,block} from '../util'\n    /* tslint:disable */\n/* eslint-disable */\n// This file was automatically generated and should not be edited.\n\n// ====================================================\n// GraphQL mutation operation: removeTodoItem\n// ====================================================\n\nexport interface removeTodoItem_removeTodoItem {\n  id: string;\n}\n\nexport interface removeTodoItem {\n  removeTodoItem: removeTodoItem_removeTodoItem | null;\n}\n\nexport interface removeTodoItemVariables {\n  blockId: string;\n  id: string;\n}\n\nexport const removeTodoItem:ExtMutation<removeTodoItem,removeTodoItemVariables> = graphql`\n    mutation removeTodoItem($blockId: ID!, $id: ID!) {\n  removeTodoItem(blockId: $blockId, id: $id) @client {\n    id\n  }\n}\n    ${block}\n`","\n// ~ auto generated\nimport * as op from './op'\nimport {ExtQuery,ExtMutation,ExtSubscription} from './util'\nimport {\n    useQuery as useQueryOrig,\n    useMutation as useMutationOrig,\n    useSubscription as useSubscriptionOrig,\n    useLazyQuery as useLazyQueryOrig,\n    MutationHookOptions,\n    QueryHookOptions,\n    SubscriptionHookOptions,\n    LazyQueryHookOptions,\n} from '@apollo/client'\n\nexport function useQuery<A,B> (x:ExtQuery<A,B>,opt?:QueryHookOptions<A,B>) {\n    return useQueryOrig<A,B>(x,opt);\n}\nexport function useLazyQuery<A,B> (x:ExtQuery<A,B>,opt?:LazyQueryHookOptions<A,B>) {\n    return useLazyQueryOrig<A,B>(x,opt);\n}\n\nexport function useMutation<A,B> (x:ExtMutation<A,B>,opt?:MutationHookOptions<A,B>) {\n    return useMutationOrig<A,B>(x,opt);\n}\n\nexport function useSubscription<A,B> (x:ExtSubscription<A,B>,opt?:SubscriptionHookOptions<A,B>) {\n    return useSubscriptionOrig<A,B>(x,opt);\n}\nexport {graphql as gql} from './util'\n\nexport default op\n\n","import ql, { gql } from \"./generated/ql\"\nimport { TodoItemStatus } from \"./generated/util\"\nimport produce from \"immer\"\n\nconst todoFragment = gql`\n  fragment todo on TodoItem {\n    id\n    content\n    status\n    isLoading\n  }\n`\n\nconst blockFragment = gql`\n  fragment block on Block {\n    id\n    todos {\n      id\n      content\n      status\n      isLoading\n    }\n  }\n`\n\nlet idx = 0\nlet idBlock = 0\nexport const resolvers = {\n  Mutation: {\n    addTodoItem: (_, { blockId, content }, { cache, getCacheKey }) => {\n      const block = cache.readFragment({\n        fragment: blockFragment,\n        id: `Block:${blockId}`,\n      })\n      console.log(\"block\", block)\n      let item = {\n        __typename: \"TodoItem\",\n        id: idx++,\n        content,\n        status: TodoItemStatus.active,\n        isLoading: false,\n      }\n      const nextBlock = produce(block, block => {\n        block.todos = [item, ...block.todos]\n      })\n      cache.writeData({\n        data: {\n          block: nextBlock,\n        },\n      })\n      return item\n    },\n\n    updateTodoItem: (_, { id, content = null, status = null }, { cache }) => {\n      //get item\n      const todo = cache.readFragment({\n        fragment: todoFragment,\n        id: `TodoItem:${id}`,\n      })\n      const nextTodo = produce(todo, x => {\n        if (content) x.content = content\n        if (status) x.status = status\n      })\n      cache.writeData({ data: nextTodo, id: `TodoItem:${id}` })\n      return true\n    },\n\n    removeTodoItem: (_, { blockId, id }, { cache }) => {\n      const block = cache.readFragment({\n        fragment: blockFragment,\n        id: `Block:${blockId}`,\n      })\n      let item = null\n      let nextBlock = {\n        ...block,\n        todos: block.todos.filter(e => {\n          if (e.id == id) {\n            item = e\n            return false\n          } else return true\n        }),\n      }\n      cache.writeData({\n        data: {\n          block: nextBlock,\n        },\n      })\n      return item\n    },\n\n    removeBlock: (_, { id }, { cache }) => {\n      const prev = cache.readQuery({ query: ql.getBlocks })\n      let removedItem = null\n      const data = {\n        ...prev,\n        blocks: prev.blocks.filter(e => {\n          if (e.id == id) {\n            removedItem = e\n            return false\n          }\n          return true\n        }),\n      }\n      cache.writeData({ data })\n      return removedItem\n    },\n\n    addBlock: (_, { id }, { cache }) => {\n      const prev = cache.readQuery({ query: ql.getBlocks })\n      const newItem = { __typename: \"Block\", id, todos: [] }\n      const data = {\n        blocks: [newItem, ...prev.blocks],\n      }\n      cache.writeData({ data })\n      return newItem\n    },\n  },\n\n  TodoItem: {},\n  Block: {},\n}\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nexport const FlexR = styled.div`\n  display: flex;\n  flex-direction: row;\n`\n\nexport const FlexC = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nexport const ItemList = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  padding: 5px 20px;\n  border-bottom: 1px solid grey;\n`\n\nexport const E = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`\n\nexport const List: React.FC<{\n  items: any[]\n  ItemComponent\n  keyExtract\n  direction?: \"vertical\" | \"horizontal\"\n}> = ({ items, ItemComponent, keyExtract, direction = \"vertical\" }) => {\n  const Content = (\n    <>\n      {items.map(item => (\n        <ItemComponent key={keyExtract(item)} {...item} />\n      ))}\n    </>\n  )\n  return direction == \"vertical\" ? (\n    <FlexC>{Content}</FlexC>\n  ) : (\n    <FlexR>{Content}</FlexR>\n  )\n}\n\nexport const Example = () => <div>OK</div>\n","import React, { useRef, useState } from \"react\"\nimport styled from \"styled-components\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faPaperPlane, faTimesCircle } from \"@fortawesome/free-solid-svg-icons\"\n\n// -------------------------\n// Styled Components\n// -------------------------\n\nconst InputBar = styled.input`\n  flex: 1;\n  padding: 5px 5px;\n  border: 1px solid grey;\n  border-radius: 3px;\n`\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: row;\n  position: relative;\n  font-size: 17px;\n`\n\nconst IconSend = styled(FontAwesomeIcon).attrs(() => ({ icon: faPaperPlane }))<{\n  disabled: boolean\n}>`\n  position: absolute;\n  right: 5px;\n  top: 30%;\n  color: grey;\n  ${({ disabled }) => {\n    if (!disabled)\n      return `\n\t\t\tcolor: black;\n\t\t\t&:hover {\n\t\t\t\tcolor: blue;\n\t\t\t\tcursor: pointer;\n\t\t\t}\n\t\t`\n  }}\n`\n\n// -------------------------\n// InputAddItem\n// -------------------------\n\nexport const InputAddItem = ({\n  onSubmit,\n  placeholder = \"enter message...\",\n  defaultValue = \"\",\n  ...props\n}) => {\n  const inputRef = useRef(null)\n  const [value, setValue] = useState(defaultValue)\n  return (\n    <Form\n      onSubmit={e => {\n        e.preventDefault()\n        if (value.length > 1) {\n          onSubmit(value)\n          setValue(\"\")\n        }\n      }}\n      {...props}\n    >\n      <InputBar\n        ref={inputRef}\n        value={value}\n        onChange={e => setValue(e.target.value)}\n        placeholder={placeholder}\n      />\n      <IconSend\n        onClick={() => {\n          if (value.length) {\n            onSubmit(value)\n            setValue(\"\")\n          }\n        }}\n        disabled={value.length == 0}\n      />\n    </Form>\n  )\n}\n","import React, { useRef, useState } from \"react\"\nimport styled from \"styled-components\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faSpinner, faTimes } from \"@fortawesome/free-solid-svg-icons\"\nconst InputBar = styled.input<{ completed: boolean }>`\n  flex: 1;\n  padding: 5px 5px;\n  border-radius: 3px;\n  font-size: 17px;\n  border: 0;\n  ${({ completed }) =>\n    completed && \"font-style: italic; text-decoration: line-through;\"}\n`\n\nconst Form = styled.div`\n  display: flex;\n  flex-direction: row;\n  position: relative;\n  border: 1px solid grey;\n`\n\nconst Icon = styled(FontAwesomeIcon)<{ color: any; icon: any }>`\n  position: absolute;\n  right: 5px;\n  top: 30%;\n  ${({ color }) => `\n\tcolor: ${color.primary};\n\t&:hover {\n\t\tcolor: ${color.hover};\n\t\tcursor: pointer;\n\t}\n\t`}\n`\n\nconst _Cont = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst Check = ({ checked, onToggle }) => (\n  <_Cont>\n    <input type=\"checkbox\" checked={checked} onChange={onToggle} />\n    <span></span>\n  </_Cont>\n)\n\nconst IconSync = props => (\n  <Icon\n    icon={faSpinner}\n    color={{ primary: \"black\", hover: \"grey\" }}\n    {...props}\n  />\n)\nconst IconRemove = props => (\n  <Icon icon={faTimes} color={{ primary: \"black\", hover: \"grey\" }} {...props} />\n)\n\n//--------------------------\n//--------------------------\n// TodoItem\n//--------------------------\n//--------------------------\n\nexport const TodoItem = ({\n  value,\n  completed,\n  isSync = false,\n  onChangeText,\n  onToggle,\n  onRemove,\n  ...props\n}) => {\n  const [v, setValue] = useState(value)\n  const inputRef = useRef(null)\n  return (\n    <Form>\n      <Check checked={completed} onToggle={onToggle} />\n      <InputBar\n        value={v}\n        ref={inputRef}\n        onChange={e => setValue(e.target.value)}\n        onBlur={() => v != value && onChangeText(v)}\n        onKeyDown={(e: any) => {\n          if (e.key == \"Escape\") e.target.blur()\n          else if (e.key == \"Enter\") e.target.blur()\n        }}\n        completed={completed}\n      />\n      {isSync ? <IconSync /> : <IconRemove onClick={onRemove} />}\n    </Form>\n  )\n}\n","import React, { useRef, useState } from \"react\"\nimport styled from \"styled-components\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faSpinner, faTimes } from \"@fortawesome/free-solid-svg-icons\"\n// - Components\nimport * as S from \"./util\"\nimport { TodoItem } from \"./TodoItem\"\n\n// -------------------------\n// TodoList\n// -------------------------\n\nconst TodoListLoading = () => <div>Loading... </div>\nconst TodoListEmpty = () => <div>no items... </div>\n\nexport const TodoList = ({\n  onChangeItemContent,\n  onChangeItemStatus,\n  onRemoveItem,\n  isLoading,\n  todos,\n}) => {\n  if (isLoading) return <TodoListLoading />\n  if (todos.length == 0) return <TodoListEmpty />\n  return (\n    <S.FlexC>\n      {todos.map(({ content, status, isLoading, id }) => (\n        <TodoItem\n          key={id}\n          value={content}\n          completed={status == \"completed\"}\n          isSync={isLoading}\n          onChangeText={v => onChangeItemContent(id, v)}\n          onToggle={() =>\n            onChangeItemStatus(id, status == \"active\" ? \"completed\" : \"active\")\n          }\n          onRemove={() => onRemoveItem(id)}\n        />\n      ))}\n    </S.FlexC>\n  )\n}\n","import React, { useState, useEffect, useCallback, useMemo } from \"react\"\nimport styled from \"@emotion/styled\"\n// - Components\nimport { FlexC, FlexR } from \"../components/util\"\nimport { TodoList, InputAddItem } from \"../components\"\nimport ql, { gql, useQuery, useMutation } from \"../generated/ql\"\n\nimport GridLayout from \"react-grid-layout\"\n//import { Responsive as RespGridLayout } from 'react-grid-layout';\n\ngql`\n  # Block\n\n  query getBlocks {\n    blocks @client {\n      id\n      todos {\n        id\n        status\n        content\n        isLoading\n      }\n    }\n  }\n\n  mutation addBlock($id: ID!) {\n    addBlock(id: $id) @client {\n      id\n    }\n  }\n\n  mutation removeBlock($id: ID!) {\n    removeBlock(id: $id) @client {\n      id\n    }\n  }\n\n  # Item\n\n  mutation addTodoItem($blockId: ID!, $content: String!) {\n    addTodoItem(blockId: $blockId, content: $content) @client {\n      id\n    }\n  }\n\n  mutation updateTodoItem($id: ID!, $content: String, $status: TodoItemStatus) {\n    updateTodoItem(id: $id, content: $content, status: $status) @client\n  }\n\n  mutation removeTodoItem($blockId: ID!, $id: ID!) {\n    removeTodoItem(blockId: $blockId, id: $id) @client {\n      id\n    }\n  }\n`\n\n// -------------------------\n// Styled Components\n// -------------------------\n\nconst Wrap = styled(FlexC)`\n  flex: column;\n  align-items: center;\n  justify-content: center;\n  padding: 20px;\n  background-color: grey;\n  height: 100%;\n`\n\nconst Header = styled(FlexC)`\n  font-size: 30px;\n  font-weight: bold;\n`\n\nconst Card = styled(FlexC)`\n  flex: 1;\n  width: 100%;\n`\n\nconst Cont = styled(FlexC)`\n  width: 100%;\n  border: 1px solid black;\n  align-items: center;\n  background-color: grey;\n  color: white;\n`\n\nconst Block = styled(FlexC)`\n  border: 1px solid black;\n  padding: 3px;\n  background-color: white;\n  opacity: 0.8;\n`\n\n// -------------------------\n// Reduxed components\n// -------------------------\n\nconst BlockContent = ({ e }) => {\n  const [removeBlock] = useMutation(ql.removeBlock)\n\n  const [addTodoItem] = useMutation(ql.addTodoItem)\n  const [updateTodoItem] = useMutation(ql.updateTodoItem)\n  const [removeTodoItem] = useMutation(ql.removeTodoItem)\n\n  return (\n    <>\n      <div style={{ flex: 1 }}>\n        <InputAddItem\n          onSubmit={content =>\n            addTodoItem({ variables: { blockId: e.id, content } })\n          }\n          placeholder={`block ${e.id}...`}\n        />\n        <TodoList\n          todos={e.todos}\n          isLoading={false}\n          onChangeItemContent={(id, content) =>\n            updateTodoItem({ variables: { id, content } })\n          }\n          onChangeItemStatus={(id, status) =>\n            updateTodoItem({ variables: { id, status } })\n          }\n          onRemoveItem={id =>\n            removeTodoItem({ variables: { blockId: e.id, id } })\n          }\n        />\n      </div>\n      <button onClick={() => removeBlock({ variables: { id: e.id } })}>\n        remove block {e.id}\n      </button>\n    </>\n  )\n}\n\nconst WrapGridLayout = ({ blocks, onCreateBlock, layout, ...otherProps }) => {\n  return (\n    <>\n      <FlexR>\n        <Header>Grid Layout</Header>\n        <button onClick={onCreateBlock}>Add block</button>\n      </FlexR>\n      <Cont>\n        <Card>\n          <GridLayout\n            className=\"layout\"\n            style={{ minHeight: 170 }}\n            isDroppable={true}\n            width={1200}\n            draggableCancel=\"input,textarea,button\"\n          >\n            {blocks.map(e => (\n              <Block key={e.id} data-grid={layout[e.id]}>\n                <BlockContent e={e} />\n              </Block>\n            ))}\n          </GridLayout>\n        </Card>\n      </Cont>\n    </>\n  )\n}\n// -------------------------\n// Page\n// -------------------------\n\nlet _id = 1\nexport default () => {\n  const {\n    data: { blocks },\n  } = useQuery(ql.getBlocks)\n  const [_addBlock] = useMutation(ql.addBlock)\n\n  const [layout, setLayout] = useState({})\n\n  const addBlock = useCallback(async () => {\n    let id = `${_id++}`\n\n    _addBlock({ variables: { id } })\n    let l = { i: id, x: 0, y: 0, w: 3, h: 1, minW: 3, static: false }\n\n    setLayout({ ...layout, [id]: l })\n  }, [blocks, layout])\n\n  return (\n    <Wrap>\n      <WrapGridLayout\n        blocks={blocks}\n        onCreateBlock={() => addBlock()}\n        layout={layout}\n      />\n    </Wrap>\n  )\n}\n","import React, { useState, useEffect } from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport \"../node_modules/react-grid-layout/css/styles.css\"\nimport \"../node_modules/react-resizable/css/styles.css\"\n// - Apollo\nimport { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\"\nimport { resolvers } from \"./resolvers\"\n// - Pages\nimport RootPage from \"./pages/Root\"\n\nconst cache = new InMemoryCache()\n\ncache.writeData({\n  data: {\n    blocks: [],\n  },\n})\n\nconst client = new ApolloClient({\n  cache: cache,\n  resolvers,\n})\n\nconst App = () => <RootPage />\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}